<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[群晖集成海康威视摄像头]]></title>
    <url>%2F2018%2F06%2F22%2F%E7%BE%A4%E6%99%96%E9%9B%86%E6%88%90%E6%B5%B7%E5%BA%B7%E5%A8%81%E8%A7%86%E6%91%84%E5%83%8F%E5%A4%B4%2F</url>
    <content type="text"><![CDATA[准备工作 群晖NAS DS918+ 海康威视 DS-2CV3Q21FD-IW 确保 Nas 和摄像头处于同一局域网中 摄像头配置 手机下载萤石云视频APP，配置摄像头连上WIFI。 在电脑上到海康威视官网/服务支持/下载/工具软件/Hikvision Tools（含SADP、录像容量计算等工具）下载”批量配置工具”。 打开批量配置工具: 特别注意海康威视的管理员账号为 “admin”,密码为”admin+底部验证码”，这是个大坑！ 3.1 通过上方添加按钮主动添加设备，找到自己的摄像头，然后打开配置界面： 在下方通过刷新找到的联网设备只能修改网络参数，此处不做推荐。 3.2 配置静态IP地址，网络 -&gt; 常用 -&gt; 去掉自动获取 -&gt; 点击保存按钮： 如果不配置静态IP，断网、断电重启后，IP地址会发生变化，NAS中的摄像头配置又得重新设置。 3.3 关闭萤石云，网络 -&gt; 萤石云 -&gt; 去掉启用萤石云的勾选 -&gt; 点击保存按钮： 如果不关闭萤石云，个人隐私容易遭泄露，你懂的。 NAS 配置 套件中心中搜索安装 Surveillance Station，并打开该应用，点击桌面上的网络摄像机，进行摄像头配置。 点击 新增 -&gt; 添加摄像机 -&gt; 快速设置 -&gt; 下一步: 添加配置摄像机： 外网配置端口映射到 NAS 的554端口号 -&gt; 手机下载 DS cam -&gt; 输入NAS 地址和账号密码 -&gt; 即可享受手机监控录像。 其它说明 摄像头自带的语音对讲功能 NAS 不支持。 请用 KODI 打开远程视频文件，使用其它视频软件可能出现没有声音。]]></content>
      <categories>
        <category>服务器</category>
        <category>群晖NAS</category>
        <category>Surveillance Station</category>
      </categories>
      <tags>
        <tag>群晖NAS</tag>
        <tag>海康威视</tag>
        <tag>网络摄像头</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[群晖搭建Hexo博客]]></title>
    <url>%2F2018%2F06%2F11%2F%E7%BE%A4%E6%99%96%E6%90%AD%E5%BB%BAHexo%E5%8D%9A%E5%AE%A2%2F</url>
    <content type="text"><![CDATA[准备工作在套件中心中提前安装好以下插件： Node.js v8 Git Server Web Station 安装过程 安装 hexo-cli 1$ npm install -g hexo-cli 建站过程 12345678$ cd XX/web （进入Web Station的网站根目录）$ mkdir blog$ cd blog$ hexo init$ npm install$ npm install hexo-deployer-git --save# 安装搜索插件$ npm install hexo-generator-searchdb --save 配置 _config.yml 123456789101112131415161718192021222324# Sitetitle: 那一缕尘心 （博客名）subtitle: 明镜念尘境，沉心思道韵！（子主题）description: 个人博客 编程 学习 写作 生活 swordshake （描述）keywords: 个人博客 编程 学习 写作 生活 swordshake (关键字)author: swordshake (作者）language: zh-Hans （中文语言）# URLurl: https://huangjunxiancool.github.io/blog (博客地址)root: /blog （相对子目录）# Deploymentdeploy: (关联github，用户后续推送静态网站至github) type: git repo: https://github.com/huangjunxiancool/blog.git branch: master # 搜索页面 search: path: search.xml field: post format: html limit: 10000 linux 配置永久 github 账号 12345678910# 先cd到根目录，执行git config --global credential.helper store命令$ git config --global credential.helper store# 执行之后会在 .gitconfig 文件中多 credential 项[user] name = 天明 email = xxxx@xxxx.com[credential] helper = store# 之后cd到项目目录，执行git pull命令，会提示输入账号密码。输完这一次以后就不再需要，并且会在根目录生成一个.git-credentials文件$ cat .git-credentials 下载主题 12$ cd themes$ git clone https://github.com/huangjunxiancool/hexo-theme-cafe.git cafe 写文章 1$ hexo new [layout] &lt;title&gt; # layout:drafet/page/post 默认为 post， 编译发布 12$ hexo g # 编译$ hexo d # 发布到github 站点发布 调试模式 1$ hexo s //启用调试模式，默认地址为当前机器 ip:4000 通过 Web Station 进行发布 打开 Web Station -&gt; 虚拟主机 -&gt; 新增 -&gt; 填写配置，根据个人需要选择协议和端口好即可。]]></content>
      <categories>
        <category>网站搭建</category>
        <category>博客</category>
      </categories>
      <tags>
        <tag>群晖NAS</tag>
        <tag>Hexo</tag>
        <tag>博客</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Eclipse 4.6.3安装配置]]></title>
    <url>%2F2017%2F06%2F27%2FEclipse%204.6.3%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE%2F</url>
    <content type="text"><![CDATA[背景之前一直使用 MyEclipse，当项目工程代码多时，实在是卡成狗，特此撰文以记之！ 准备工作 系统环境：win10 64位，此处列出本人开发过程会用到的相关插件配置，大家根据自己所需选择性安装。 本地请先安装好 JDK， 安装配置。 最新 Eclipse 安装程序，下载地址。 ant 安装程序，下载地址。 maven 安装程序，下载地址。 安装步骤一、安装配置 JDK本文安装的 JDK 版本为1.7.0_79。 二、安装配置 ant 将下载的 *.zip 格式的安装包，找个地方解压后即可使用，比如 “D:\Program Files\Java\apache-ant-1.8.4”。 配置环境变量，在 path 后面添加ant的bin目录路径，比如 “XX;D:\Program Files\Java\apache-ant-1.8.4\bin”。三、安装配置 maven 将下载的 *.zip 格式的安装包，找个地方解压，比如 “D:\Program Files\Java\apache-maven-3.0.4”。 配置环境变量，添加系统变量 “M2_HOME”，值为 “D:\Program Files\Java\apache-maven-3.0.4”。 Maven 仓库配置：123456789101112131415161718192021222324251&gt; 从Maven安装目录中找到文件 conf/settings.xml，将其复制到~/.m2目录中。其中“~”对于Windows而言可能是C:/Users/yourname，其中“yourname”是你当前登录操作系统用户名。2&gt; 修改本地仓库位置，修改～/.m2/settings.xml，在根元素&lt;settings&gt;中找到关于&lt;localRepository&gt;的部分，如下配置将本地仓库设置到 D:/m2repo 中： &lt;localRepository&gt;D:\m2repo&lt;/localRepository&gt;3&gt; 修改指向的远程Maven私服,修改 ~/.m2/settings.xml，在根元素&lt;settings&gt;中修改&lt;mirrors&gt;部件(附上阿里云的maven私服地址)： &lt;mirrors&gt; &lt;mirror&gt; &lt;id&gt;alimaven&lt;/id&gt; &lt;name&gt;aliyun maven&lt;/name&gt; &lt;url&gt;http://maven.aliyun.com/nexus/content/groups/public/&lt;/url&gt; &lt;mirrorOf&gt;central&lt;/mirrorOf&gt; &lt;/mirror&gt; &lt;/mirrors&gt;4&gt; 如过指向的私服需要用户名密码，请修改 ~/.m2/settings.xml，在根元素&lt;settings&gt;中修改&lt;servers&gt;部分：&lt;servers&gt; &lt;server&gt; &lt;id&gt;releases&lt;/id&gt; &lt;username&gt;用户名&lt;/username&gt; &lt;password&gt;密码&lt;/password&gt; &lt;/server&gt; &lt;server&gt; &lt;id&gt;snapshots&lt;/id&gt; &lt;username&gt;用户名&lt;/username&gt; &lt;password&gt;密码&lt;/password&gt; &lt;/server&gt; &lt;/servers&gt; 四、安装配置 eclipse安装过程：打开安装程序，会弹出一个选择所需安装的IDE列表，此处选择第一个“ Eclipse IDE For Java Developers” （或者第二个“ Eclipse IDE For JavaEE Developers” ），然后一直点下一步，安装过程中还会继续联网下载相关插件，如果出现报错提示无法连接之类的，那么你需要一个翻墙软件，先翻墙下。 Windows\Preferences 配置 General \ Appearance \ Colors and Fonts 点击“Basic\Text Font”，点击“Edit”按钮。 在弹出的对话框中，根据需要修改字体大小，点击“确定”按钮。 General\ContentTypes\Text\Java Properties File设置Default encoding，把下面的ISO-8859-1改为UTF-8或者GBK（推荐UTF-8），然后update。 General \ Editors \ Text Editors \ Spelling（推荐） 去掉“Enable spell checking”的勾选框。 General \ Workspace 将工作空间文本文件默认编码设置为UTF-8。 Ant \ Editor \ Formatter 设置ant文件缩进为2。 Ant \ Runtime Java \ Compiler \ Errors/Warnings 点击菜单”Window | References…”进入”References”对话框，选择”Java|Complier|Errors/Warnings”。 请按照以下表格中“设置值”一列的要求设置，左边的Eclipse默认值供参考。 和Eclipse默认值不同的设置用 加粗 标明。 Code Style 选项 Eclipse默认值 设置值 Non-static access to a static member Warning Warning Indirect access to a static member Ignore Ignore Unqualified access to instance field Ignore Ignore Access to a non-accessible member of an enclosing type Ignore Ignore Parameter assignment Ignore Ignore Non-externalized strings Ignore Ignore Undocumented empty block Ignore Ignore Resource not managed via try-with-resource (1.7 or higher) Ignore Ignore Method with a constructor name Warning Warning Method can be static Ignore Ignore Method can potentially be static Ignore Ignore Potential programming problems 选项 Eclipse默认值 设置值 Comparing identical values (‘x == x’) Warning Warning Assignment has no effect (e.g. ‘x = x’) Warning Warning Possible accidental boolean assignment (e.g. ‘if (a = b)’) Ignore Warning Boxing and unboxing conversions Ignore Ignore Using a char array in string concatenation Warning Warning Inexact type match for vararg arguments Warning Warning Empty statement Ignore Ignore Unused object allocation Ignore Warning Incomplete ‘switch’ cases on enum Warning Ignore Signal even if ‘default’ case exists Off Off ‘switch’ is missing ‘default’ case Ignore Ignore ‘switch’ case fall-through Ignore Warning Hidden catch block Warning Warning ‘finally’ does not complete normally Warning Warning Dead code (e.g. ‘if (false)’) Warning Warning Resource leak Warning Warning Potential resource leak Ignore Ignore Serializable class without serialVersionUID Warning Warning Missing synchronized modifier on inherited method Ignore Ignore Class overrides ‘equals()’ but not ‘hashCode()’ Ignore Ignore Name shadowing and conflicts 选项 Eclipse默认值 设置值 Field declaration hides another field or variable Ignore Ignore Local variable declaration hides another field or variable Ignore Ignore Include constructor or setter method parameters Off Off Type parameter hides another type Warning Warning Method does not override package visible method Warning Warning Interface method conflicts with protected ‘Object’ method Warning Warning Deprecated and restricted API 选项 Eclipse默认值 设置值 Deprecated API Warning Warning Signal use of deprecated API inside deprecated code Off Off Signal overriding or implementing deprecated method Off Off Forbidden reference (access rules) Error Error Discouraged reference (access rules) Warning Warning Unnecessary code 选项 Eclipse默认值 设置值 Value of local variable is not used Warning Warning Value of parameter is not used Ignore Ignore Ignore in overriding and implementing methods On On Ignore parameters documented with ‘@param’ tag On On Unused type parameter Ignore Ignore Unused import Warning Warning Unused private member Warning Warning Unnecessary ‘else’ statement Ignore Ignore Unnecessary cast or ‘instanceof’ operation Ignore Warning Unnecessary declaration of thrown exception Ignore Ignore Ignore in overriding and implementing methods On On Ignore exceptions documented with ‘@throws’ or ‘@exception’ tags On On Ignore ‘Exception’ and ‘Throwable’ On On Unused ‘break’ or ‘continue’ label Warning Warning Redundant super interface Ignore Warning Generic types 选项 Eclipse默认值 设置值 Unchecked generic type operation Warning Ignore Usage of a raw type Warning Ignore Generic type parameter declared with a final type bound Warning Warning Ignore unavoidable generic type problems due to raw APIs Off Off Annotations 选项 Eclipse默认值 设置值 Missing ‘@Override’ annotation Ignore Ignore Include implementations of interface methods (1.6 or higher) On On Missing ‘@Deprecated’ annotation Ignore Ignore Annotation is used as super interface Warning Warning Unhandled token in ‘@SuppressWarnings’ Warning Warning Enable ‘@SuppressWarnings’ annotations On On Unused ‘@SuppressWarnings’ token Warning Warning Suppress optional errors with ‘@SuppressWarnings’ Off Off Null analysis 选项 Eclipse默认值 设置值 Null pointer access Warning Warning Potential null pointer access Ignore Ignore Redundant null check Ignore Warning Include ‘assert’ in null analysis Off Off Enable annotation-based null analysis Off Off Violation of null specification Error Error Conflict between null annotations and null inference Error Error Unchecked conversion from non-annotated type to @NonNull type Warning Warning Redundnant null annotation Warning Warning ‘@NonNull’ parameter not annotated in overriding method Warning Warning Missing ‘@NonNullByDefault’ annotation on package Ignore Ignore Use default annotations for null specifications On On Inherit null annotations Off Off Enable syntactic null analysis for fields Off Off Treat errors like fatal compile errors默认值：off设置值：on 8. Java \ Installed JREs 确认使用安装的JDK，并配置JVM参数为：-Xms256m -Xmx1024m -XX:PermSize=256M -XX:MaxPermSize=256M；同时修改Java\Compiler中的Compile Level为1.7. 9. Validation 关闭各种文件的校验，点击”Disable All”-&gt;”Apply”。 10. XML \XML Files\Editors XML文件缩进为2。 11. 相关插件的安装 eclipse初次安装时，选择”Eclipse IDE for JavaEE developers “的童鞋，可以少去部分插件的安装，此处介绍出本人用到的插件安装过程。 Maven\Installations使用安装的Maven: 安装maven使用相关插件 安装gef 插件，使用eclipse的更新步骤：Help &gt;&gt; Install New Software &gt;&gt; add，地址为http://download.eclipse.org/tools/gef/updates/interim/ ，直接按照提示安装就可以了，如果提示插件没有证书是否安装，选择ok就可以。 安装m2e-wtp插件，这个插件的作用是将maven project 自动转为web project，方便直接部署到eclipse的tomcat中，更新地址为http://download.eclipse.org/m2e-wtp/snapshots/kepler 安装SVN插件和Check out as maven project插件 安装subclipse 插件(即SVN插件)，更新地址 http://subclipse.tigris.org/update_1.8.x 安装m2eclipse-subclipse，地址：http://repo1.maven.org/maven2/.m2e/connectors/m2eclipse-subclipse/0.13.0/N/0.13.0.201303011221 安装tomcat server 配置插件 如果preferences中找不到server或者server中找不到tomcat的配置，请按以下步骤安装插件： Help-&gt;InstallNew Software 点击“add”按钮，输入name: “Kepler”repository:http://download.eclipse.org/releases/kepler 找到“Web,XML, Java EE and OSGi Enterprise Development”——&gt;“JST Server AdaptersExtensions”(打勾选上该项)，然后一路NEXT 完成安装。]]></content>
      <categories>
        <category>编程相关</category>
        <category>IDE</category>
        <category>Eclipse</category>
      </categories>
      <tags>
        <tag>Eclipse</tag>
        <tag>Java</tag>
        <tag>IDE</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Sencha Cmd 创建ExtJS 6工程]]></title>
    <url>%2F2016%2F08%2F07%2FSencha%20Cmd%20%E5%88%9B%E5%BB%BAExtJS%206%E5%B7%A5%E7%A8%8B%2F</url>
    <content type="text"><![CDATA[准备工作 下载安装 Sencha Cmd 下载 ExtJS SDK 解压到本地（以下例子中extjs sdk解压在D:\sencha\ext-6.0.0） 建立工作空间 执行以下 dos 命令生成工作空间 sencha -sdk D:\sencha\ext-6.0.0 generate workspace D:\sencha\workspace 可以在 workspace\.sencha\sencha.cfg 文件中添加全局变量，例如增加 app.url 属性： app.url=http://localhost/test-web/ 创建公共包 执行以下dos 命令 &gt; cd D:\sencha\workspace &gt; sencha generate package commonWidget 修改 commonWidget 包下的 package.json 12345678&#123;... "namespace":"CommonWidget", //修改命名空间首字母为大写 "framework":"ext", //指定框架为extjs "toolkit":"classic", //指定为传统PC风格 "requires": ["charts"] //必要时添加其它ext基础包的依赖...&#125; 至此，已建好 commonWidget 包，可以在它的 src 下直接添加公共的 extjs 类，在后续创建的 ext app 中直接依赖使用 commonWidget 的内容。 如需打包，可使用命令: sencha package build 创建App 执行以下 dos 命令，创建 Test 的 App 12&gt; cd D:\sencha\workspace&gt; sencha -sdk D:\sencha\ext-6.0.0 generate app -classic Test test 修改 Test 下的 app.json 12345678910111213&#123;... "env": "$&#123;build.environment&#125;", "serviceUrl":"$&#123;app.url&#125;", //定义Ext下的全局变量，可直接引用workspace中添加的属性配置 "theme": "theme-test", //可在此处指定app所需的主题 "requires":[ "font-awesome", //字体图标 "commonWidget", //上方创建的公共包 "ext-locale", //国际化 ... ]...&#125; 1234567## 常用的编译app sencha命令：&gt; sencha ant clean # 清除编译制品&gt; sencha app build development #构建为开发环境项目&gt; sencha app build production #构建为生成环境项目&gt; sencha app refresh #可在添加类、删除类或更改类名后运行。它会通过Ext.Loader来更新bootstrap文件，方便开发模式的调试&gt; sencha ant sass #该命令会根据Sass源代码重新生成CSS文件。它可在任何scss文件改变后运行。&gt; sencha app watch #监控工程文件变化，立即重新编译开发制品 创建 App 的自定义主题包和文件结构 执行以下 dos 命令，创建 theme-test 主题皮肤 &gt; cd D:\sencha\workspace\test &gt; sencha generate theme theme-test 文件结构说明 12345678|-- package.json #这是包属性文件，它告诉Sencha Cmd关于这个包的名字、版本和依赖关系（其他需要的包）|-- sass/ #这个目录包含所有样式源文件，源文件分为4个主要部分：| |--var/ #变量。| |--src/ #规则和UI混入调用定义在“sass/var/”的变量。| |--etc/ #包含额外的函数和功能。| |--example #含当前文件使用时用于生成图像切片样本成分（该文件夹是Sencha Cmd使用，不能删除） |--resources/ #包含主题需要的图像和静态资源|--overrides/ #包含任何JavaScript重写Ext JS组件类，这些组件需要的主题]]></content>
      <categories>
        <category>编程相关</category>
        <category>JavaScript</category>
        <category>ExtJS</category>
      </categories>
      <tags>
        <tag>JavaScript</tag>
        <tag>ExtJS</tag>
        <tag>前端</tag>
      </tags>
  </entry>
</search>
